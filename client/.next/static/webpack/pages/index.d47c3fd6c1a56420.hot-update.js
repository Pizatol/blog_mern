"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./Components/formattedDate.js":
/*!*************************************!*\
  !*** ./Components/formattedDate.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"formattedDate\": function() { return /* binding */ formattedDate; }\n/* harmony export */ });\nvar formattedDate = function formattedDate() {\n  var date = new Date();\n  var day = \"\".concat(date.getDate() < 10 ? \"0\" : \"\").concat(date.getDate());\n  var month = \"\".concat(date.getMonth() + 1 < 10 ? \"0\" : \"\").concat(date.getMonth());\n  var year = \"\".concat(date.getFullYear(), \" \");\n  var minutes = date.getMinutes();\n  var hour = date.getHours();\n  var seconds = date.getSeconds();\n  var formattedDate = day + \"/\" + month + \"/\" + year + ' ' + hour + \":\" + minutes + \":\" + seconds;\n  var formatDate = day + \"/\" + month + \"/\" + year;\n  return formatDate;\n}; // export const formattedDateWithSeconds = () => {\n// \tconst date = new Date();\n// \tconst day = `${date.getDate() < 10 ? \"0\" : \"\"}${date.getDate()}`;\n// \tconst month = `${\n// \t\t date.getMonth() + 1 < 10 ? \"0\" : \"\"\n// \t}${date.getMonth()}`;\n// \tconst year = `${date.getFullYear()} `;\n// \tconst minutes = date.getMinutes()\n// \tconst hour = date.getHours()\n// \tconst seconds = date.getSeconds()\n// \tconst formattedDate = day + \"/\" + month + \"/\" + year + ' ' + hour+\":\"+minutes+\":\"+seconds;\n// \tconst formatDate = day + \"/\" + month + \"/\" + year ;\n// \treturn formattedDate\n// }\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21wb25lbnRzL2Zvcm1hdHRlZERhdGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUVPLElBQU1BLGFBQWEsR0FBRyx5QkFBTTtFQUNsQyxJQUFNQyxJQUFJLEdBQUcsSUFBSUMsSUFBSixFQUFiO0VBQ0EsSUFBTUMsR0FBRyxhQUFNRixJQUFJLENBQUNHLE9BQUwsS0FBaUIsRUFBakIsR0FBc0IsR0FBdEIsR0FBNEIsRUFBbEMsU0FBdUNILElBQUksQ0FBQ0csT0FBTCxFQUF2QyxDQUFUO0VBQ0EsSUFBTUMsS0FBSyxhQUNUSixJQUFJLENBQUNLLFFBQUwsS0FBa0IsQ0FBbEIsR0FBc0IsRUFBdEIsR0FBMkIsR0FBM0IsR0FBaUMsRUFEeEIsU0FFUkwsSUFBSSxDQUFDSyxRQUFMLEVBRlEsQ0FBWDtFQUdBLElBQU1DLElBQUksYUFBTU4sSUFBSSxDQUFDTyxXQUFMLEVBQU4sTUFBVjtFQUNBLElBQU1DLE9BQU8sR0FBR1IsSUFBSSxDQUFDUyxVQUFMLEVBQWhCO0VBQ0EsSUFBTUMsSUFBSSxHQUFHVixJQUFJLENBQUNXLFFBQUwsRUFBYjtFQUNBLElBQU1DLE9BQU8sR0FBR1osSUFBSSxDQUFDYSxVQUFMLEVBQWhCO0VBQ0EsSUFBTWQsYUFBYSxHQUFHRyxHQUFHLEdBQUcsR0FBTixHQUFZRSxLQUFaLEdBQW9CLEdBQXBCLEdBQTBCRSxJQUExQixHQUFpQyxHQUFqQyxHQUF1Q0ksSUFBdkMsR0FBNEMsR0FBNUMsR0FBZ0RGLE9BQWhELEdBQXdELEdBQXhELEdBQTRESSxPQUFsRjtFQUNBLElBQU1FLFVBQVUsR0FBR1osR0FBRyxHQUFHLEdBQU4sR0FBWUUsS0FBWixHQUFvQixHQUFwQixHQUEwQkUsSUFBN0M7RUFFQSxPQUFPUSxVQUFQO0FBQ0EsQ0FkTSxFQWtCUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL0NvbXBvbmVudHMvZm9ybWF0dGVkRGF0ZS5qcz9hYzdhIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuZXhwb3J0IGNvbnN0IGZvcm1hdHRlZERhdGUgPSAoKSA9PiB7XHJcblx0Y29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7XHJcblx0Y29uc3QgZGF5ID0gYCR7ZGF0ZS5nZXREYXRlKCkgPCAxMCA/IFwiMFwiIDogXCJcIn0ke2RhdGUuZ2V0RGF0ZSgpfWA7XHJcblx0Y29uc3QgbW9udGggPSBgJHtcclxuXHRcdCBkYXRlLmdldE1vbnRoKCkgKyAxIDwgMTAgPyBcIjBcIiA6IFwiXCJcclxuXHR9JHtkYXRlLmdldE1vbnRoKCl9YDtcclxuXHRjb25zdCB5ZWFyID0gYCR7ZGF0ZS5nZXRGdWxsWWVhcigpfSBgO1xyXG5cdGNvbnN0IG1pbnV0ZXMgPSBkYXRlLmdldE1pbnV0ZXMoKVxyXG5cdGNvbnN0IGhvdXIgPSBkYXRlLmdldEhvdXJzKClcclxuXHRjb25zdCBzZWNvbmRzID0gZGF0ZS5nZXRTZWNvbmRzKClcclxuXHRjb25zdCBmb3JtYXR0ZWREYXRlID0gZGF5ICsgXCIvXCIgKyBtb250aCArIFwiL1wiICsgeWVhciArICcgJyArIGhvdXIrXCI6XCIrbWludXRlcytcIjpcIitzZWNvbmRzO1xyXG5cdGNvbnN0IGZvcm1hdERhdGUgPSBkYXkgKyBcIi9cIiArIG1vbnRoICsgXCIvXCIgKyB5ZWFyIDtcclxuXHRcclxuXHRyZXR1cm4gZm9ybWF0RGF0ZVxyXG59XHJcblxyXG5cclxuXHJcbi8vIGV4cG9ydCBjb25zdCBmb3JtYXR0ZWREYXRlV2l0aFNlY29uZHMgPSAoKSA9PiB7XHJcbi8vIFx0Y29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7XHJcbi8vIFx0Y29uc3QgZGF5ID0gYCR7ZGF0ZS5nZXREYXRlKCkgPCAxMCA/IFwiMFwiIDogXCJcIn0ke2RhdGUuZ2V0RGF0ZSgpfWA7XHJcbi8vIFx0Y29uc3QgbW9udGggPSBgJHtcclxuLy8gXHRcdCBkYXRlLmdldE1vbnRoKCkgKyAxIDwgMTAgPyBcIjBcIiA6IFwiXCJcclxuLy8gXHR9JHtkYXRlLmdldE1vbnRoKCl9YDtcclxuLy8gXHRjb25zdCB5ZWFyID0gYCR7ZGF0ZS5nZXRGdWxsWWVhcigpfSBgO1xyXG4vLyBcdGNvbnN0IG1pbnV0ZXMgPSBkYXRlLmdldE1pbnV0ZXMoKVxyXG4vLyBcdGNvbnN0IGhvdXIgPSBkYXRlLmdldEhvdXJzKClcclxuLy8gXHRjb25zdCBzZWNvbmRzID0gZGF0ZS5nZXRTZWNvbmRzKClcclxuLy8gXHRjb25zdCBmb3JtYXR0ZWREYXRlID0gZGF5ICsgXCIvXCIgKyBtb250aCArIFwiL1wiICsgeWVhciArICcgJyArIGhvdXIrXCI6XCIrbWludXRlcytcIjpcIitzZWNvbmRzO1xyXG4vLyBcdGNvbnN0IGZvcm1hdERhdGUgPSBkYXkgKyBcIi9cIiArIG1vbnRoICsgXCIvXCIgKyB5ZWFyIDtcclxuXHRcclxuLy8gXHRyZXR1cm4gZm9ybWF0dGVkRGF0ZVxyXG4vLyB9XHJcblxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJmb3JtYXR0ZWREYXRlIiwiZGF0ZSIsIkRhdGUiLCJkYXkiLCJnZXREYXRlIiwibW9udGgiLCJnZXRNb250aCIsInllYXIiLCJnZXRGdWxsWWVhciIsIm1pbnV0ZXMiLCJnZXRNaW51dGVzIiwiaG91ciIsImdldEhvdXJzIiwic2Vjb25kcyIsImdldFNlY29uZHMiLCJmb3JtYXREYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./Components/formattedDate.js\n"));

/***/ })

});